{"version":3,"sources":["../src/components/Avatar.tsx"],"names":["generateInitials","name","words","initials","stringToColor","str","hash","i","color","Avatar","src","size","fontSize","borderRadius","style","defaultSrc","backgroundColor","avatarStyle","jsx","e","Avatar_default"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\r\n\r\ninterface AvatarProps {\r\n  name?: string;\r\n  src?: string;\r\n  size?: number;\r\n  color?: string;\r\n  fontSize?: string;\r\n  borderRadius?: string;\r\n  style?: React.CSSProperties;\r\n  defaultSrc?: string;\r\n}\r\n\r\nconst generateInitials = (name: string = ''): string => {\r\n  if (!name) return '?';\r\n  const words = name.split(' ').filter(Boolean);\r\n  let initials = words[0] ? words[0][0] : ''; // Get first letter of the first word\r\n  initials += words[1] ? words[1][0] : ''; // Get first letter of the second word (if available)\r\n  return initials.toUpperCase(); // Ensure initials are uppercase\r\n};\r\n\r\nconst stringToColor = (str: string): string => {\r\n  let hash = 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  let color = '#';\r\n  for (let i = 0; i < 3; i++) {\r\n    color += ((hash >> (i * 8)) & 0xff).toString(16).padStart(2, '0');\r\n  }\r\n  return color;\r\n};\r\n\r\nconst Avatar: React.FC<AvatarProps> = ({\r\n  name = '',\r\n  src = '',\r\n  size = 50,\r\n  color = '#fff',\r\n  fontSize = '1em',\r\n  borderRadius = '50%',\r\n  style = {},\r\n  defaultSrc = 'https://i.pravatar.cc/100',\r\n}) => {\r\n  const initials = generateInitials(name);\r\n  const backgroundColor = stringToColor(name);\r\n  const avatarStyle: React.CSSProperties = {\r\n    width: size,\r\n    height: size,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: backgroundColor,\r\n    color: color,\r\n    fontSize: fontSize,\r\n    fontWeight: 'bold',\r\n    borderRadius: borderRadius,\r\n    overflow: 'hidden',\r\n    ...style,\r\n  };\r\n\r\n  // Show default image if neither name nor src is provided\r\n  if (!name && !src) {\r\n    return (\r\n      <div style={avatarStyle}>\r\n        <img\r\n          src={defaultSrc}\r\n          alt='Default Avatar'\r\n          style={{ width: '100%', height: '100%', objectFit: 'cover' }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show initials if name is provided but no src\r\n  if (name && !src) {\r\n    return (\r\n      <div style={avatarStyle}>\r\n        <span>{initials}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show image if src is provided\r\n  return (\r\n    <div style={avatarStyle}>\r\n      <img\r\n        src={src}\r\n        alt={name || 'Avatar'}\r\n        style={{ width: '100%', height: '100%', objectFit: 'cover' }}\r\n        onError={(e) => {\r\n          e.currentTarget.onerror = null;\r\n          e.currentTarget.src = defaultSrc;\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n"]}