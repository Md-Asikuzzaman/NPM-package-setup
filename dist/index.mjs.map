{"version":3,"sources":["../src/components/Avatar.tsx"],"names":["generateInitials","name","words","initials","stringToColor","str","hash","i","color","Avatar","src","size","fontSize","borderRadius","className","style","defaultSrc","backgroundColor","avatarStyle","jsx","e","Avatar_default"],"mappings":"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","file":"index.mjs","sourcesContent":["import React from 'react';\r\n\r\ninterface AvatarProps {\r\n  name?: string;\r\n  src?: string;\r\n  size?: number;\r\n  color?: string;\r\n  fontSize?: string;\r\n  borderRadius?: string;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  defaultSrc?: string;\r\n}\r\n\r\nconst generateInitials = (name: string = ''): string => {\r\n  if (!name) return '?';\r\n  const words = name.split(' ').filter(Boolean);\r\n  let initials = words[0] ? words[0][0] : ''; // Get first letter of the first word\r\n  initials += words[1] ? words[1][0] : ''; // Get first letter of the second word (if available)\r\n  return initials.toUpperCase(); // Ensure initials are uppercase\r\n};\r\n\r\nconst stringToColor = (str: string): string => {\r\n  let hash = 0;\r\n  for (let i = 0; i < str.length; i++) {\r\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  let color = '#';\r\n  for (let i = 0; i < 3; i++) {\r\n    color += ((hash >> (i * 8)) & 0xff).toString(16).padStart(2, '0');\r\n  }\r\n  return color;\r\n};\r\n\r\nconst Avatar: React.FC<AvatarProps> = ({\r\n  name = '',\r\n  src = '',\r\n  size = 50,\r\n  color = '#fff',\r\n  fontSize = '1em',\r\n  borderRadius = '50%',\r\n  className = '',\r\n  style = {},\r\n  defaultSrc = 'https://i.pravatar.cc/50',\r\n}) => {\r\n  const initials = generateInitials(name);\r\n  const backgroundColor = stringToColor(name);\r\n  const avatarStyle: React.CSSProperties = {\r\n    width: size,\r\n    height: size,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: backgroundColor,\r\n    color: color,\r\n    fontSize: fontSize,\r\n    fontWeight: 'bold',\r\n    borderRadius: borderRadius,\r\n    overflow: 'hidden',\r\n    ...style,\r\n  };\r\n\r\n  // Show default image if neither name nor src is provided\r\n  if (!name && !src) {\r\n    return (\r\n      <div className={`avatar ${className}`} style={avatarStyle}>\r\n        <img\r\n          src={defaultSrc}\r\n          alt='Default Avatar'\r\n          style={{ width: '100%', height: '100%', objectFit: 'cover' }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show initials if name is provided but no src\r\n  if (name && !src) {\r\n    return (\r\n      <div className={`avatar ${className}`} style={avatarStyle}>\r\n        <span>{initials}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show image if src is provided\r\n  return (\r\n    <div className={`avatar ${className}`} style={avatarStyle}>\r\n      <img\r\n        src={src}\r\n        alt={name || 'Avatar'}\r\n        style={{ width: '100%', height: '100%', objectFit: 'cover' }}\r\n        onError={(e) => {\r\n          e.currentTarget.onerror = null;\r\n          e.currentTarget.src = defaultSrc;\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n"]}